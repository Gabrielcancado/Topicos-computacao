#include <iostream>
#include <math.h>

using namespace std;

class matrizb{ //classe que ira conter as funções utilizadas
    private: //no privado, coloco as variáveis que serão utilizadas nas funções
    float resposta; // variável que será usada na função

    public: //em público coloco as funções que devem ser utilizadas ao longo do código

    void B(int a, int b, int c, int d, int e, int f, int g, int h){ // função que irá fazer os cálculos desejados
    resposta = (a * 0.1) + (b * 0.15) + (c * 0.1) + (d * 0.15) + (e * 0.15) + (f * 0.1) + (g * 0.15) + (h * 0.1); // cálculo o valor que deve ter aquela casa daquela matriz, para isso o programa multiplica e soma cada valor de acordo com seu peso
    }

    float C(){ // função que retorna o valor resultado das operações
        return resposta; // retorno do valor resultado
    }
};


int main()
{
    int a, t, i, j; // variáveis a serem utilizadas ao longo do código
    float temp, teste, ce, c, cd, e, d, be, b, bd; // variáveis a serem utilizadas ao longo do código, mas do tipo float, ou seja, não inteiro
    cout << "Insira o numero de linhas (e consequentemente de colunas) da sua matriz" << endl; // o computador imprime pedindo para o usuário inserir o tamanho da matriz
    cin >> a; // o valor digitado pelo usuário é armazenado na variável a
    float B[a][a]; // o computador gera a matriz que será gerada no final do programa
    t = a + 2; // o computador adiciona mais 2 no número digitado pelo usuário
    float T[t][t]; // o computador gera uma matriz com 2 linhas e duas colunas a mais que a digitada pelo usuário, a matriz T

    for (i=0; i<=t; i++){ // início do comando for
        for (j=0; j<=t; j++){
            T[i][j] = 0.0; // esse comando for definirá todos os elementos da matriz T como 0, isso para que na hora de fazer os cálculos,  os elementos da primeira e última linha, primeira e última coluna da matriz digitada também possuirem 8 elementos em volta, mas os que não teriam iriginalmente se tornam 0
        }
    }

    for (i=0; i<a; i++){ // início do comando for
        for (j=0;j <a; j++){
            cout << "insira a informacao da " << (i+1) << " linha e " << (j+1) << " coluna" << endl; // o computador pede para o usuário inserir a informação de cada linha e coluna da matriz, dentro do comando for para varrer toda a matriz
            cin >> T[i+1][j+1]; // cada valor digitado ao longo do comando for pelo usuário é inserido na matriz t, sempre uma casa e uma coluna a mais, para preencher o meio dela e deixar as bordas com o valor 0
        }
    }

    system ("pause"); // o sistema pausa o código, para depois límpa-lo
    system ("cls"); // o computador limpa o prompt de comando, por uma questão de estética

    matrizb valorb; // invoco a classe com o objeto chamado valorb

    for (i=0; i<a; i++){ // inicio o comando for, que só vai varrer a matriz T até o elemento a-1, isso porque teremos o objetivo de pegar apenas o número de elementos da matriz original
        for (j=0; j<a; j++){ // igualmente com as colunas
            ce = T[i][j]; // ce se refere ao elemento de cima e esquerdo, ele é simplesmente i j, pois o comando for começa com ele, logo o elemento na matriz gerada b está 1 linha e uma coluna a mais que ele, usando essa lógica definimos todos os elementos ao redor do que queremos
            c = T[i][j+1]; // c é o elemento em cima, na mesma linha e uma coluna a frente
            cd = T[i][j+2]; // cd é cima direito, mesma linha duas colunas a frente
            e = T[i+1][j]; // e é o elemento a esquerda, na próxima linha mas mesma coluna da onde o programa for está
            d = T[i+1][j+2]; // d é o elemento a direita
            be = T[i+2][j]; // be é o elemento a baixo e a esquerda
            b = T[i+2][j+1]; // b é o elemento a baixo do desejado
            bd = T[i+2][j+2]; // bd é o elemento a baixo e a direita
            valorb.B(ce, c, cd, e, d, be, b, bd); // chamo a função B na classe, e ela faz as contas com os pesos de cada elemento em volta e a soma
            temp = valorb.C(); // salvo o valor calculado na variável temp
            B[i][j] = temp; // insiro o valor calculado no elemento em B que o programa está no momento, com as variáveis i e j, dessa forma coloco cada elemento calculado na posição certa em B
        }
    }

    cout << "Matriz inserida" << endl; // o programa printa a matriz que o usuário inseriu por fins de consulta
    for (i=1; i<(t-1); i++){
        for (j=1; j<(t-1); j++){
        cout << T[i][j] << " "; // o programa imprime cada valor da matriz inserida pelo usuário
        }
        cout << endl;
    }

    cout << endl << endl << endl;

    cout << "Matriz gerada" << endl;
    for (i=0; i<a; i++){
        for (j=0; j<a; j++){
        cout << B[i][j] << " ";
        }
        cout << endl;
    }

    return 0;
}
